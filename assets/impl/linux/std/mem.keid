namespace std::impl::mem

import (
    core::mem
)

extern function keid_malloc(size: usize): Pointer<void>
extern function memset(region: Pointer<void>, val: int32, length: usize)
extern function memmove(dst: Pointer<void>, src: Pointer<void>, length: usize)
extern function keid_free(ptr: Pointer<void>)

public function alloc(size: usize): Pointer<void> {
    unsafe {
        return keid_malloc(size)
    }
}

public function copy(src: Pointer<void>, dst: Pointer<void>, length: usize) {
    unsafe {
        memmove(dst, src, length)
    }
    return
}

public function dealloc(ptr: Pointer<void>) {
    unsafe {
        keid_free(ptr)
    }
    return
}

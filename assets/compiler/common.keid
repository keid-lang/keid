namespace keidc::common

import (
    core::string
    keidc::ksdl
    keidc::types
)

public class SourceFile {
    path: string
    text: string
}

public class CompileError {
    file: SourceFile
    loc: TokenLocation
    message: string

    public static create(file: SourceFile, loc: TokenLocation, message: string): CompileError => new CompileError { file, loc, message, }
}

implement ToString for CompileError {
    toString(): string {
        let tr = TokenReader.create(this.file.text)
        tr.cursor = this.loc.start
        let pos = tr.documentPosition
        return string.format(this.message, " at ", this.file.path, ":", pos.line.toString(), ":", pos.col.toString())
    }
}

public enum Modifier {
    Public
    Static
    Extern
    Namespace
    Constructor
    Unsafe
    Abstract
    Override
}

implement ToString for Modifier {
    toString(): string {
        return match this {
            Public => "public"
            Static => "static"
            Extern => "extern"
            Namespace => "namespace"
            Constructor => "constructor"
            Unsafe => "unsafe"
            Abstract => "abstract"
            Override => "override"
        } 
    }
}

public enum ObjectKind {
    Class
    Struct
    Interface
    Enum
    Typedef {
        aliasee: ComplexType
    }
}

implement ToString for ObjectKind {
    toString(): string {
        return match this {
            Class => "class"
            Struct => "struct"
            Interface => "interface"
            Enum => "enum"
        }
    }
}

namespace keidc

import (
    core::collections
    core::string
    std::fs
    std::os
    keidc::ast
    keidc::common
    keidc::registry
    keidc::parser
    keidc::ksdl
    keidc::types
)

public extern function main(): int32 {
    let directory = Directory.open("../keid")
    directory.close()

    let programFile = File.open("../keid/assets/compiler/common.keid", FileOpenMode.ReadOnly)
    let programText = String.fromUtf8(programFile.readAllBytes())
    programFile.close()

    let prevTime = std::time.getSystemTime()
    let ast = keidc::parser.parseKeidSource(programText)
    let elapsedTime = std::time.getSystemTime() - prevTime
    
    std::io.println("Parsing took ", elapsedTime.milliseconds.toString(), "ms")
    std::io.println("AST: ", ast.toString(), "\n")

    let startResolveTime = std::time.getSystemTime()

    let tmc = TypeMetadataCompiler.create()
    tmc.include(ast)
    let resolveErrors = tmc.resolveAll()
    
    std::io.println("Resolved AST: ", tmc.programs.get(0).toString())
    
    let endResolveTime = std::time.getSystemTime() - startResolveTime
    std::io.println("Type resolver took ", endResolveTime.milliseconds.toString(), "ms")

    if resolveErrors.length > 0 {
        for resolveError in resolveErrors {
            std::io.println(resolveError.toString())
        }

        os.exit(1)
    }

    os.exit(0)

    // core::array tests
    // core::array::test.testArrayLength()
    // core::array::test.testArrayEquals()
    // core::array::test.testSingleElementCopy()
    // core::array::test.testMultipleElementCopy()
    // core::array::test.testArrayToString()

    // // core::string::format() tests
    // core::string::test.testIdentityFormat()
    // core::string::test.testAppendFormat()

    // // core::string::String tests
    // core::string::test.testEmptyString()
    // core::string::test.testFromUtf8()
    // core::string::test.testStringToString()
    // core::string::test.testStringEquals()
    // core::string::test.testStringsWithNul()
    // core::string::test.testStringAddition()
    // core::string::test.testStringFromCStr()
    // core::string::test.testIndexOf()
    // core::string::test.testSubstring()
    // core::string::test.testSplit()
    // core::string::test.testTrim()
    // core::string::test.testStartsWith()

    // // core::string::StringBuilder tests
    // core::string::test.testEmptyStringBuilder()
    // core::string::test.testEmptyAppend()
    // core::string::test.testEmptyDoubleAppend()
    // core::string::test.testPreallocatedTooSmall()
    // core::string::test.testPreallocatedTooBig()
    // core::string::test.testInsert()

    // // core::collections tests
    // core::collections::test.testListPushOnce()
    // core::collections::test.testListRemoveOnce()
    // core::collections::test.testListRemoveMany()

    // // core::object::Class tests
    // core::object::test.testClassFromInstance()

    return 0
}

namespace keidc::ksdl

import (
    core::collections
)

public class TokenStream {
    currentRule: ?Rule
    tokens: List<LexerToken>
    offset: usize

    public static create(tokens: List<LexerToken>): TokenStream => new TokenStream {
        currentRule = null
        tokens
        offset = 0
    }

    public get isFinished: bool => this.offset == this.tokens.length

    public get currentToken: LexerToken {
        if this.tokens.length == 0 {
            return LexerToken.create(TokenLocation.create(0, 0), LexerTokenKind.EOF)
        }
        if this.isFinished {
            let lastToken = this.tokens.elementAt(this.tokens.length - 1)
            return LexerToken.create(TokenLocation.create(lastToken.originalLoc.start + lastToken.originalLoc.length, 0), LexerTokenKind.EOF)
        }
        return this.tokens.elementAt(this.offset)
    }

    public next() {
        if !this.isFinished {
            this.offset += 1
        }
    }
}

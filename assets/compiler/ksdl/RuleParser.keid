namespace keidc::ksdl

import (
    core::collections
)

class LineReader {
    lines: [string]

    next() {
        if !this.isFinished {
            this.lines = this.lines[1:]
        }
    }

    public get isFinished: bool => this.lines.length == 0
    
    public get line: string => this.lines[0].trim()
}

function parseRule(reader: LineReader) {
    let ruleName = reader.line.substringAfter(5).trim()
    std::io.println("Rule name: ", ruleName)

    while !reader.isFinished {
        let line = reader.line
        if line == "end rule" {
            return
        }
        reader.next()
    }
}

public function parseKsdl(ksdl: string): List<Rule> {
    let rules = List.empty<Rule>()

    let reader = new LineReader {
        lines = ksdl.split("\n")
    }

    while !reader.isFinished {
        let line = reader.line
        std::io.println("Line: ", line)

        if line.startsWith("rule") {
            parseRule(reader)
        }

        reader.next()
    }

    return rules
}

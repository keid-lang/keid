namespace core.sync

import (
    core.ops
)

public class Semaphore {
    /// Pauses the current microthread until a call to `signal` unpauses it. The mutex must be acquired to invoke this. 
    wait() {
        
    }

    /// Unpauses a single microthread waiting on this mutex.
    signal() {
        
    }

    /// Unpauses all microthreads waiting on this mutex.
    signalAll() {

    }
}

public class Mutex {
}

implement ContextReceiver for Mutex {
    enter() {
        // lock
    }

    exit() {
        // unlock
    }
}

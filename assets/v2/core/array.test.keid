namespace core.array.test

public function testArrayLength() {
    let zeroLength = [int32](default(int32); 0)
    test.assertTrue(zeroLength.length == 0)

    let tenLength = [int32](default(int32); 10)
    test.assertTrue(tenLength.length == 10)

    test.assertFalse(zeroLength.length == tenLength.length)
}

public function testArrayEquals() {
    let zeroLength_1 = [int32](default(int32); 0)
    let zeroLength_2 = [int32](default(int32); 0)

    test.assertTrue(zeroLength_1 == zeroLength_2)
    test.assertTrue(core.array.equals<int32>(zeroLength_1, zeroLength_2))

    let oneLength_1 = [int32](default(int32); 1)
    let oneLength_2 = [int32](default(int32) + 1; 1)

    test.assertFalse(zeroLength_1 == oneLength_2)
    test.assertFalse(zeroLength_2 == oneLength_2)

    test.assertFalse(oneLength_1 == oneLength_2)

    // oneLength_1[0] += 1
    let test = oneLength_1[0]
    
    test.assertTrue(oneLength_1 == oneLength_2)
}

public function testEmptyCopy() {
    let zeroLength_1 = [int32](default(int32); 0)
    let zeroLength_2 = [int32](default(int32); 0)

    array.copy(zeroLength_1, 0, zeroLength_2, 0, 0)

    test.assertTrue(zeroLength_1.length == 0)   
    test.assertTrue(zeroLength_2.length == 0)   
    test.assertTrue(zeroLength_1.length == zeroLength_2.length)   
}

public function testSingleElementCopy() {
    let oneLength_1 = [int32](default(int32); 1)
    let oneLength_2 = [int32](default(int32); 1)

    test.assertTrue(oneLength_1.length == 1)
    test.assertTrue(oneLength_2.length == 1)
    test.assertTrue(oneLength_1.length == oneLength_2.length)

    test.assertTrue(oneLength_1[0] == default(int32))
    test.assertTrue(oneLength_2[0] == default(int32))

    oneLength_1[0] = 100
    oneLength_2[0] = 200

    test.assertTrue(oneLength_1[0] == 100)
    test.assertTrue(oneLength_2[0] == 200)
    test.assertFalse(oneLength_1[0] == oneLength_2[0])

    array.copy<int32>(oneLength_1, 0, oneLength_2, 0, 1)

    test.assertTrue(oneLength_1[0] == 100)
    test.assertTrue(oneLength_2[0] == 100)
    test.assertTrue(oneLength_1[0] == oneLength_2[0])
}

public function testMultipleElementCopy() {
    let arr1 = [int32] {   0, 0,   0,   0,  40, 50, 0, 70, 0, 0 }
    let arr2 = [int32] { 100, 0, 200, 300, 500,  0, 0,  0, 0, 0 }

    array.copy<int32>(arr1, 4, arr2, 1, 3)

    test.assertTrue(arr1 == [int32] {   0,  0,  0, 0, 40, 50, 0, 70, 0, 0 })
    test.assertTrue(arr2 == [int32] { 100, 40, 50, 0, 500, 0, 0,  0, 0, 0 })
}

public function testArrayToString() {
    let empty = [int32] { }
    test.assertEqual(core.array.toString<int32>(empty), "[]")

    let single = [int32] { 1 }
    test.assertEqual(core.array.toString<int32>(single), "[1]")

    let two = [int32] { 2, 3 }
    test.assertEqual(core.array.toString<int32>(two), "[2, 3]")

    let many = [int32] { 4, 5, 6, 7, 8, 9, 10, 11, 12 }
    test.assertEqual(core.array.toString<int32>(many), "[4, 5, 6, 7, 8, 9, 10, 11, 12]")

    let strings = [string] { "Hello", "World" }
    test.assertEqual(core.array.toString<string>(strings), "[Hello, World]")
}
